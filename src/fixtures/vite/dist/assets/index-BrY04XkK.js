(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const t of o.addedNodes)t.tagName==="LINK"&&t.rel==="modulepreload"&&s(t)}).observe(document,{childList:!0,subtree:!0});function n(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(e){if(e.ep)return;e.ep=!0;const o=n(e);fetch(e.href,o)}})();var l={},p={};function c(){try{return!0}catch{return!1}}const h=c()?"works":"does not work",u=globalThis.process?"works":"does not work",a=globalThis.process&&l?"works":"does not work",f=typeof globalThis.process<"u"?"works":"does not work",d=typeof process<"u"?"works":"does not work",m=typeof process<"u"&&p?"works":"does not work",y=(globalThis.process==null,"works"),E=(globalThis.process!=null,"works");document.querySelector("#app").innerHTML=`
  <div>
    <h1>Experiments</h1>
    <h2>tryExperiment</h2>
    <p>${h}</p>
    <h2>plainGlobalThisWithProcessExperiment</h2>
    <p>${u}</p>
    <h2>plainGlobalThisWithProcessaAndEnvExperiment</h2>
    <p>${a}</p>
    <h2>plainGlobalThisWIthTypeofProcessExperiment</h2>
    <p>${f}</p>
    <h2>processExperiment</h2>
    <p>${d}</p>
    <h2>processWithEnvCheckExperiemnt</h2>
    <p>${m}</p>
    <h2>flipDefault</h2>
    <p>${y}</p>
    <h2>flipDefaultWithoutFlippingGlobalThisProcess</h2>
    <p>${E}</p>
  </div>
`;
